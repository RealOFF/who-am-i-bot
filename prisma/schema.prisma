// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int              @id
  createdAt             DateTime         @default(now())
  updatedAt             DateTime         @updatedAt
  language              String
  username              String
  players               Player[]
  activeTextRequestType TextRequestType?
}

model Player {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
  userId        Int
  session       Session  @relation(fields: [sessionId], references: [id])
  sessionId     Int      @unique
  assignedRoles Role[]   @relation("Role_assignedTo_Player")
  createdRoles  Role[]   @relation("Role_createdBy_Player")
  isCreator     Boolean  @default(false)
  isActive      Boolean  @default(true)
}

model Session {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String   @unique @default(uuid())
  players   Player[]
  rounds    Round[]
}

model Round {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId Int
  roles     Role[] @relation("Roles_in_Round")
  isActive  Boolean  @default(true)
  activeRole Role?  @relation("Round_with_ActiveRole", fields: [activeRoleId], references: [id])
  activeRoleId Int? @unique
}

model Role {
  id           Int      @id @default(autoincrement())
  order Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  title        String
  round        Round    @relation("Roles_in_Round", fields: [roundId], references: [id])
  roundId      Int      @unique
  assignedTo   Player   @relation("Role_assignedTo_Player", fields: [assignedToId], references: [id])
  assignedToId Int      @unique
  createdBy    Player   @relation("Role_createdBy_Player", fields: [createdById], references: [id])
  createdById  Int
  activeRound Round? @relation("Round_with_ActiveRole")
}

enum TextRequestType {
  SETUP_ROLE_NAME
}
